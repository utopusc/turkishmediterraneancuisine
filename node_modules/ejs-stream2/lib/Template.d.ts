/*!
 * Copyright 2019 yangjunbao <yangjunbao@shimo.im>. All rights reserved.
 * @since 2019-10-10 12:45:26
 *
 * most of the code comes from
 * {@link https://github.com/mde/ejs/blob/master/lib/ejs.js}
 */
import { AsyncReadableStream } from './AsyncReadableStream';
export interface TemplateOptions {
    async: boolean;
    defer: boolean;
}
declare enum MODE {
    EVAL = "eval",
    ESCAPED = "escaped",
    RAW = "raw",
    COMMENT = "comment",
    LITERAL = "literal"
}
export declare class Template<T extends object> {
    templateText: string;
    mode: MODE | null;
    truncate: boolean;
    currentLine: number;
    source: string;
    dependencies: any[];
    opts: TemplateOptions;
    constructor(text: string, options?: Partial<TemplateOptions>);
    compile(): (data: T) => AsyncReadableStream;
    generateSource(): void;
    parseTemplateText(): string[];
    _addOutput(line: string): string | undefined;
    scanLine(line: string): void;
}
export declare function compile<T extends object>(template: string, options?: TemplateOptions): (data: T) => AsyncReadableStream;
export declare function render<T extends object>(template: string, data: T, options?: TemplateOptions): AsyncReadableStream;
export {};
