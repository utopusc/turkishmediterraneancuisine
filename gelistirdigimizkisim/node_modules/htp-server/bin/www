#! /usr/bin/env node

/*
  npm package
    portfinder 随机指定查询端口，并提供基本配置
*/

const { program } = require('commander');
const pkg = require('../package.json');
const defaults = require('../config/default');
const config = require('../config/config')

program
  .version(pkg.version, '-v, --version')
  .option('-p, --port <type>', 'Default port', defaults.port)
  .option('-a, --address', 'Address to use (defaults to 127.0.0.1)')
  .option('-d, --dir', 'Show directory listings (defaults to true)')
  .option('-g, --gzip', 'Show directory listings (defaults to false)')
  .option('-i, --index', 'Display autoIndex (defaults to true)')
  // .option('-s, --silent', 'Suppress log messages from output')
  // .option('-e', 'Expires is start (default to false)')
  .option('-c', 'Cache time (max-age) in seconds [3600], e.g. -c 10 for 10 seconds.')
  // .option('-t', 'Connections timeout in seconds [120], e.g. -t60 for 1 minute.To disable timeout, use -t0')
  // .option('-S, --ssl', 'Enable https.')
  // .option('-C, --cert', 'Path to ssl cert file (default: cert.pem).')
  // .option('-K, --key', 'Path to ssl key file (default: key.pem).')
  // .option('-o, --open', 'open your browser (default to false)')
  .parse(process.argv);


const mapParam = (key) => {
  const aliasMap = {
    'p': 'port',
    'a': 'address',
    'd': 'dir',
    'g': 'gzip',
    'c': 'cache',
    // 'e': 'expires',
    'i': 'index',
    's': 'silent',
    'o': 'open',
    'S': 'ssl',
    'C': 'cert',
    'K': 'key',
  };
  const alias = aliasMap[key];
  return alias ? alias : key;
};

let params = process.argv.slice(2).reduce((p, n, index, argv) => {
  let key = n.includes('--') ? n.slice(2) : (n.includes('-') ? n.slice(1) : '');
  key = mapParam(key);
  key && (p[key] = argv[index+1])
  return p;
}, {})

params = Object.assign({}, defaults, params);
config.mergeOptions(params);
require('../index');
module.exports = params;
